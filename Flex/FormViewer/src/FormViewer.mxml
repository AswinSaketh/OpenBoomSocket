<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" xmlns:views="views.*" xmlns:managers="managers.*"
	creationComplete="initApp()"
	width="100%" height="100%">
	<mx:Style source="css/FormViewer.css" />
	<mx:Metadata>
		[Event(name="deleteChecked")]
		[Event(name="toggleChecked")]
	</mx:Metadata>
	<mx:Script>
		<![CDATA[
			import mx.events.CloseEvent;
			import mx.controls.List;
			import valueobjects.FormItem;
			import valueobjects.Form;
			import mx.collections.ArrayCollection;
			import mx.utils.ObjectUtil;
			import mx.events.FlexEvent;
			import mx.controls.Alert;
			public var toolid:Number;
			public var selectClause:String;
			public var fromClause:String;
			public var whereClause:String;
			public var orderVars:String;
			public var dataSource:String;
			public var requestpage:String;
			public var serverURL:String;
			public var keyList:String;
			[Bindable]
			public var sitemapping:String;
			public var deleteStatus:Boolean = false;
			public var st:Date;
			public var et:Date;
			[Embed(source='/assets/icon_addFile.gif')]
			public var addIcon:Class;
			[Embed(source='/assets/icon_deleteFolder.gif')]
			public var deleteIcon:Class;
			[Embed(source='/assets/icon_ordinal.gif')]
			public var ordinalIcon:Class;
			public function initApp():void{
				if(Application.application.parameters.toolid != null){
					toolid = Number(Application.application.parameters.toolid);
				}else{
					toolid = 109;
				}
				if(Application.application.parameters.selectClause != null){
					selectClause = Application.application.parameters.selectClause;
				}else{
					selectClause = "[version].version, [versionStatus].status,contentobject.contentobjectID,[contentobject].CONTENTOBJECTNAME,[contentobject].DATECREATED,[contentobject].DATEMODIFIED";
				}
				if(Application.application.parameters.fromClause != null){
					fromClause = Application.application.parameters.fromClause;
				}else{
					fromClause = "contentobject INNER JOIN [version] ON [contentobject].contentobjectid = [version].instanceItemid INNER JOIN [VersionStatus] ON [version].versionStatusID = [VersionStatus].versionstatusid";
				}
				if(Application.application.parameters.whereClause != null){
					whereClause = Application.application.parameters.whereClause;
				}else{
					whereClause = "([version].archive IS NULL OR [version].archive = 0) AND [version].formobjectitemid = 109";
				}
				if(Application.application.parameters.orderVars != null){
					orderVars = Application.application.parameters.orderVars;
				}else{
					orderVars = "CONTENTOBJECTNAME ASC";
				}
				if(Application.application.parameters.dataSource == '' || Application.application.parameters.dataSource == null){
					dataSource = "dp07fcen";
				}else{
					dataSource = Application.application.parameters.dataSource;
				}
				if(Application.application.parameters.requestpage != null){
					requestpage = Application.application.parameters.requestpage;
				}else{
					requestpage = "main.cfm";
				}
				if(Application.application.parameters.requestpage != null){
					serverURL = Application.application.parameters.serverURL;
				}else{
					serverURL = "http://dp06sis.d-p.com"
				}
				if(Application.application.parameters.sitemapping != null){
					sitemapping = Application.application.parameters.sitemapping;
				}else{
					sitemapping = "installer"
				}
				if(Application.application.parameters.requestpage != null){
					keyList = Application.application.parameters.keyList;
				}else{
					keyList = "CONTENTOBJECTNAME"
				}
				this.addEventListener("deleteChecked",showDelete);
				this.addEventListener("toggleChecked",toggleDelete);
				st = new Date();
				fvRemoteDB.dataRO.getFormDataFlex({toolid:Number(toolid),selectClause:selectClause,fromClause:fromClause,whereClause:whereClause,orderVars:orderVars,dataSource:dataSource});
			}
			public function editItem():void{
				var thisRequest:URLRequest = new URLRequest(serverURL+"/"+requestpage+"?instanceid="+formGrid.selectedItem[Application.application.dataManagerObj.toolname.toLowerCase()+"id"]+"&displayForm=1&formstep=showform");
				navigateToURL(thisRequest,"_self");
			}
			public function addItem():void{
				var thisRequest:URLRequest = new URLRequest(serverURL+"/"+requestpage+"?displayForm=1&formstep=showform");
				navigateToURL(thisRequest,"_self");
			}
			public function toggleDelete(event:Object):void{
				deleteStatus = !deleteStatus;
				for(var i:uint = 0 ; i<formGrid.dataProvider.length ; i++){
					formGrid.dataProvider.getItemAt(i).markForDeletion = deleteStatus;
				}
				formGrid.dataProvider=Application.application.dataManagerObj.dataFilterList;
			}
			public function showDelete(event:Object):void{
				var deletelist:String = "";
				for(var i:uint = 0 ; i<formGrid.dataProvider.length ; i++){
					if(formGrid.dataProvider.getItemAt(i).markForDeletion){
						if(deletelist.length){
							deletelist += ",";
						}
						deletelist += formGrid.dataProvider.getItemAt(i)[Application.application.dataManagerObj.toolname.toLowerCase()+"id"].toString();
					}
				}
				if(deletelist.length){
					deleteBtn.alpha = 1;
					deleteBtn.mouseEnabled = true;
				}else{
					deleteBtn.alpha = 0.3;
					deleteBtn.mouseEnabled = false;
				}
			}
			public function confirmDelete():void{
				var deletelist:String = "";
				for(var i:uint = 0 ; i<formGrid.dataProvider.length ; i++){
					if(formGrid.dataProvider.getItemAt(i).markForDeletion){
						if(deletelist.length){
							deletelist += "\n";
						}
						deletelist += formGrid.dataProvider.getItemAt(i)[Application.application.dataManagerObj.toolname.toLowerCase()+"name"].toString();
					}
				}
				Alert.show(deletelist,"Delete Items", 3, this, alertClickHandler);
			}
			private function alertClickHandler(event:CloseEvent):void {
				if (event.detail==Alert.YES){
					deleteItems();
				}
			}
			public function deleteItems():void{
				var deletelist:String = "";
				for(var i:uint = 0 ; i<formGrid.dataProvider.length ; i++){
					if(formGrid.dataProvider.getItemAt(i).markForDeletion){
						if(deletelist.length){
							deletelist += ",";
						}
						deletelist += formGrid.dataProvider.getItemAt(i)[Application.application.dataManagerObj.toolname.toLowerCase()+"id"].toString();
					}
				}
				fvRemoteDB.dataRO.deleteFormDataFlex({tablename:dataManagerObj.toolset.getItemAt(0).tablename,instanceids:deletelist,dataSource:dataSource});
				if(deletelist.length){
					Alert.show("Deleted items "+deletelist+" from "+dataManagerObj.toolset.getItemAt(0).tablename);
				}
			}
			public function ordinalItems():void{
				var thisRequest:URLRequest = new URLRequest(serverURL+"/"+requestpage+"?formstep=ordinalForm&formobjectid="+toolid);
				navigateToURL(thisRequest,"_self");
			}
			public function filterItems():void{
				var startTime:Date = new Date();
				if(searchString.text == ""){
					Application.application.dataManagerObj.dataFilterList=Application.application.dataManagerObj.dataList;
				}else{
					if(fieldName.selectedIndex>=0){
						Application.application.dataManagerObj.dataFilterList = new ArrayCollection();
						for(var i:Number=0 ; i<Application.application.dataManagerObj.dataList.length ;i++){
							if(String(Application.application.dataManagerObj.dataList.getItemAt(i)[Application.application.dataManagerObj.toolset.getItemAt(0).items.getItemAt(Application.application.dataManagerObj.getIndexFromArrayCollection(Application.application.dataManagerObj.toolset.getItemAt(0).items,'OBJECTLABEL',fieldName.selectedLabel)).FIELDNAME]).toLowerCase().indexOf(searchString.text.toLowerCase()) != -1){
								Application.application.dataManagerObj.dataFilterList.addItem(Application.application.dataManagerObj.dataList.getItemAt(i));
							}
						}
					}
				}
				var endTime:Date = new Date();
				Application.application.dataCount.text = "("+Application.application.dataManagerObj.dataFilterList.length+" items)";
				Application.application.searchTime.text ="Search time "+ Math.abs(startTime.valueOf() - endTime.valueOf()) + "ms";
			}
		]]>
	</mx:Script>
	<managers:RemoteDBManager id="fvRemoteDB" />
	<managers:DataManager id="dataManagerObj" />
	<mx:DataGrid id="formGrid" styleName="displayGrid" left="10" right="10" top="85" bottom="10" doubleClickEnabled="true" itemDoubleClick="editItem()" dataProvider="{Application.application.dataManagerObj.dataFilterList}" buttonMode="true" useHandCursor="true">
	</mx:DataGrid>
	<mx:HBox styleName="headerBar" top="0" verticalAlign="middle" height="30" width="100%" backgroundColor="#F8AD37">
		<mx:Label id="toolName" styleName="toolName" text="{Application.application.dataManagerObj.formname}" />
	</mx:HBox>
	<mx:Canvas styleName="headerBar" top="30" height="35" width="100%" backgroundColor="#EFF2F6">
		<mx:HBox left="10" verticalAlign="middle" paddingTop="5">
			<mx:Image id="addBtn" source="{new addIcon()}" click="addItem()" buttonMode="true" useHandCursor="true" toolTip="{String('Add '+Application.application.dataManagerObj.formname)}" />
			<mx:Image id="deleteBtn" source="{new deleteIcon()}" click="confirmDelete()" buttonMode="true" useHandCursor="true" toolTip="{String('Delete '+Application.application.dataManagerObj.formname)}" mouseEnabled="false" alpha=".3" />
			<mx:Image id="ordinalBtn" source="{new ordinalIcon()}" click="ordinalItems()" buttonMode="true" useHandCursor="true" toolTip="{String('Ordinal '+Application.application.dataManagerObj.formname)}" mouseEnabled="false" alpha=".3" />
			<mx:Label text="Double click grid item to edit."/>
		</mx:HBox>
		<mx:HBox right="2" verticalAlign="middle" paddingTop="5" paddingBottom="3">
			<mx:Text text="Search"/>
			<mx:ComboBox id="fieldName" dataProvider="{Application.application.dataManagerObj.fieldList}" labelField="headerText" toolTip="Choose Search Field" />
			<mx:TextInput id="searchString" width="180" keyUp="filterItems()" toolTip="Filters on each key stroke"/>
			<mx:Button id="searchBtn" label="Clear" click="searchString.text='';filterItems()" toolTip="Clear Search"/>
		</mx:HBox>
	</mx:Canvas>
	<mx:HBox top="72" right="10">
		<mx:Label id="searchTime" styleName="infoStyle" width="100" textAlign="right" />
		<mx:Text id="dataCount" styleName="infoStyle" />
	</mx:HBox>
</mx:Application>
